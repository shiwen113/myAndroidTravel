1、线程基本概念：并发，提高性能
    线程之间并发，线程内顺序

Java对线程的支持：
   Thread  Runnable   Object(notifyAll wait)
   sychronized(同步)  关键字  
   1.5之后：java.util.concurrent

2、Thread类及其线程的创建
1）了解Thread类，
  静态方法：currentThread     获得当前的线程对象
            sleep(毫秒数)
  其它实例方法：
            getId    获得线程的id
            getName          名称
            getState         状态
            getPriority      优先级
            start       启动线程，调用run方法     
            run         线程体
            
Runnable：public void run();

2）构造方法:
    Thread()           Thread(String name)   Thread: run方法
    Thread(Runnable对象)  Thread(Runnable ,String name)
                      Runnable:run方法

3) 创建线程的基本方法（重点）

a、写一个类，继承Thread类，重写run方法
b、写一个类实现Runnable接口，用
   Thread(Runnable对象)创建线程对象
c、通过Callable接口、FutureTask、Thread来创建对象（了解）

Runnable       void run();
Callable<V>    V(Object) call() throws Exception; 
步骤：1、定义一个类实现Callable接口，实现call方法，线程体，可以有返回值
      2、以Callable对象创建FutureTask对象，FutureTask是实现了Runnable接口
      3、以FutureTask对象来创建Thread对象
 三种创建线程之间的区别？

3、线程的状态及转换(面试题)
  了解线程的状态及其转换

4、其它
  1）线程的优先级  get/setPriority
  2) join方法
  3) 守护线程:setDaemon(true)












