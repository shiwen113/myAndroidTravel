1、封装: public  空  protected private 
   成员变量前：private
   方法前：    public

2、对象之间的两种主要关系：
组合，部分与整体的关系，has-a
    class People {
      private Head head;
    }

3、继承基础：IS-A的关系

术语：子类、父类（基类、超类）、
继承作用：
1）、代码的复用
2）、父类定义接口，子类提供不同的实现，多态

继承了什么？
1)、属性  2)、方法 3)、构造方法不被继承

继承特点：
1）单继承  2）Object是所有类的根类

继承语法:
  class  类名 extends 父类名

继承时用的访问控制符：protected


4、方法的重写：
1）在重写的方法前加:@Override
2）继承关系，子类的方法的签名 = 父类的方法的签名

5、类型向上转型及多态基本概念(***)
    父类类型，编译期类型，确定了能调用什么样的方法
    子类类型，运行期类型，确定了实际调了什么方法
    多态：一个名字，多形态
   父类  变量名 = new 子类（）；  //向上自动转型,简单
   Shape  s = new Rect();
   s.area();	//长方形的面积
   s = new Cirle();
   s.area();    //园的面积
   子类  变量名  = (子类)父类的引用     //向下强制

   method(Shape rect)

6、关键字：
   super:调用父调的成员，调用父类的构造方法
   instanceof: 判断一个对象是否是某种类型
      obj  instanceof 类型  ==》 true(false)

7、static：变量、方法
              实例变量     	 静态变量(类变量)
语法:                             static
含义:       与每个对象相关        与类相关
调用方式：   对象.名字          类名.静态变量名
内存         每个对象一份       类一份，所有的对象共享这一份
初始化方式：    new                类加载

静态方法与实例方法：
   静态方法可以用类名直接调用，实例方法必须先创建对象，通过对象来调用
   

设计模式：23之一，单例设计

8、对象的生命周期：初始化过程  
    先父类  后子类  
    先静态  再实例 
    先实例  再构造 
    静态一次，实例多次
                
    方法的调用

静态：初始化时机是类加载，.class文件==>读到内存中,仅一次 Class对象
    
  Dog d = new Dog();            

   对象：由GC负责清理内存





