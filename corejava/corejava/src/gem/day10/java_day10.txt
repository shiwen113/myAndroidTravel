Java集合（元素element）
1、Java集合特点：
  (1)与数组相比：
       集合： 元素的类型是引用类型                          元素个数可变
       数组： 元素的类型可以是基本类型也可以是引用类型      元素个数不可变
  (2)集合体系：
       接口体系：掌握接口定义的方法(重点)
       实现类：  尽量理解不同实现类之间的差异
    创建集合对象：
      Set<元素的实际类型>  变量名 = new 实现类<元素的实际类型>(); 
  (3)所有的集合中的接串口与实现类：java.util

2、集合体系
Collection: 接口中的定义方法（重要）,如何迭代
  |- List : 可重复  有序,有位置，有索引，重点关注与索引相关的方法(4种)
     |- ArrayList:    基于数组   适合随机存取，不适合大量插入或删除操作  线程不安全
     |- LinkedList:   链表       适合大量插入或删除操作                  线程不安全
                       还实现了Deque接口
     |- Vector:（老） 基于数组                                           线程安全
  |- Set  : 不可重复 无序 (2种)
     |- HashSet: 
        重复:o1.equals(o2) == true,o1与o2是重复
        (复杂情型: 
              o1.equals(o2) == true 但 o1.hashCode()!=o2.hashCode()
              o1.equals(o2) == false 但 o1.hashCode()==o2.hashCode()
         ),要求： o1.equals(o2) == true 哪 o1.hashCode()==o2.hashCode()

     |- SortedSet (接口)(难)：给集合中的对象排序
        |- TreeSet
           排序规则：(从某个角度定义了对象之间的大小关系)
             对象本身自已只能自带一个排序规则：自然排序
               类实现Comparable接口中的compareTo(Object other)
                   this.object obther.object  <0 =0 >0
             能自定义其它的排序规则:
                   自定义一个类实现Comparator接口，定义的方法:                              
                        compare(Object o1,Object o2) <0 =0 >0
  |- Queue: 队列：FIFO(先进先出)
     |- LinkedList:
     |- PriorityQueue:带优先级的列队




Map  :  key-value的集合

如何创建对象：
List  add get(index)
Map   put get(key)

员工管理系统：

1、增加一个员工
2、删除一个员工
   请输入一个工号：判断员工编号是否已存在
3、修改员工信息:
   输入员工的工号，显示员工原信息
   输入新的信息，替换原员工
4、列表显示员工信息
   
0、退出
请选择:1

请输入员工工号：
请输入员工姓名：
请输入员工工资：
确认加入：
  如果确认：创建一个员工对象，将这个员工对象加到List集合中

AJAX:
员工信息：放在一个List集合

